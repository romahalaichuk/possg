{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Desktop\\\\possg4\\\\src\\\\components\\\\TableManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./TableManager.css\";\nimport Table from \"./Table\";\nimport Modal from \"./Modal\";\nimport MenuManager from \"./MenuManager\";\nimport WynosListModal from \"./WynosListModal\";\nimport ManagerPanel from \"./ManagerPanel\";\nimport \"./TableManager.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TABLES_STORAGE_KEY = \"tables\";\nconst WYNOS_TABLES_STORAGE_KEY = \"wynosTables\";\nconst MANAGER_PANEL_STATE_KEY = \"managerPanelOpen\";\nconst initializeTables = () => {\n  const initialTables = [{\n    id: 0,\n    name: \"Wynos\",\n    status: \"special\",\n    products: []\n  }, ...Array.from({\n    length: 45\n  }, (_, index) => ({\n    id: index + 1,\n    name: `Table ${index + 1}`,\n    status: \"free\",\n    products: []\n  }))];\n  saveDataToLocalStorage(TABLES_STORAGE_KEY, initialTables);\n  return initialTables;\n};\nconst initializeWynosTables = () => {\n  const initialWynosTables = Array.from({\n    length: 20\n  }, (_, index) => ({\n    id: index + 40,\n    name: `Wynos ${index + 1}`,\n    status: \"free\",\n    products: []\n  }));\n  saveDataToLocalStorage(WYNOS_TABLES_STORAGE_KEY, initialWynosTables);\n  return initialWynosTables;\n};\nconst saveDataToLocalStorage = (key, data) => {\n  localStorage.setItem(key, JSON.stringify(data));\n};\nconst loadDataFromLocalStorage = key => {\n  const data = localStorage.getItem(key);\n  return data ? JSON.parse(data) : null;\n};\nconst TableManager = () => {\n  _s();\n  const [tables, setTables] = useState([]);\n  const [wynosTables, setWynosTables] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [menuManagerOpen, setMenuManagerOpen] = useState(false);\n  const [wynosModalOpen, setWynosModalOpen] = useState(false);\n  const [selectedTableId, setSelectedTableId] = useState(null);\n  const [isWynos, setIsWynos] = useState(false);\n  const [managerPanelOpen, setManagerPanelOpen] = useState(false);\n  useEffect(() => {\n    const storedTables = loadDataFromLocalStorage(TABLES_STORAGE_KEY);\n    if (storedTables) {\n      setTables(storedTables);\n    } else {\n      setTables(initializeTables());\n    }\n    const storedWynosTables = loadDataFromLocalStorage(WYNOS_TABLES_STORAGE_KEY);\n    if (storedWynosTables) {\n      setWynosTables(storedWynosTables);\n    } else {\n      setWynosTables(initializeWynosTables());\n    }\n    const storedManagerPanelState = loadDataFromLocalStorage(MANAGER_PANEL_STATE_KEY);\n    if (storedManagerPanelState !== null) {\n      setManagerPanelOpen(storedManagerPanelState === \"true\");\n    }\n  }, []);\n  const handleTableClick = tableId => {\n    if (tableId === 0) {\n      setWynosModalOpen(true);\n    } else {\n      const clickedTable = tables.find(table => table.id === tableId);\n      setSelectedTableId(tableId);\n      setIsWynos(false);\n      if (clickedTable.status === \"free\") {\n        setModalOpen(true);\n      } else if (clickedTable.status === \"occupied\") {\n        setMenuManagerOpen(true);\n      }\n    }\n  };\n  const handleModalClose = () => {\n    setModalOpen(false);\n  };\n  const handleModalConfirm = tableName => {\n    const updatedTables = isWynos ? wynosTables.map(table => table.id === selectedTableId ? {\n      ...table,\n      name: tableName,\n      status: \"occupied\"\n    } : table) : tables.map(table => table.id === selectedTableId ? {\n      ...table,\n      name: tableName,\n      status: \"occupied\"\n    } : table);\n    if (isWynos) {\n      setWynosTables(updatedTables);\n      saveDataToLocalStorage(WYNOS_TABLES_STORAGE_KEY, updatedTables);\n    } else {\n      setTables(updatedTables);\n      saveDataToLocalStorage(TABLES_STORAGE_KEY, updatedTables);\n    }\n    setModalOpen(false);\n    setMenuManagerOpen(true);\n  };\n  const handleMenuManagerClose = () => {\n    setMenuManagerOpen(false);\n    setSelectedTableId(null);\n  };\n  const handleWynosModalClose = () => {\n    setWynosModalOpen(false);\n  };\n  const handleWynosTableClick = tableId => {\n    const clickedTable = wynosTables.find(table => table.id === tableId);\n    if (clickedTable) {\n      setSelectedTableId(tableId);\n      setIsWynos(true);\n      if (clickedTable.status === \"free\") {\n        setModalOpen(true);\n      } else if (clickedTable.status === \"occupied\") {\n        setMenuManagerOpen(true);\n      }\n    }\n  };\n  const handleAddProduct = (productId, productName) => {\n    const updatedTables = isWynos ? wynosTables.map(table => table.id === selectedTableId ? {\n      ...table,\n      products: [...table.products, {\n        id: productId,\n        name: productName\n      }]\n    } : table) : tables.map(table => table.id === selectedTableId ? {\n      ...table,\n      products: [...table.products, {\n        id: productId,\n        name: productName\n      }]\n    } : table);\n    if (isWynos) {\n      setWynosTables(updatedTables);\n      saveDataToLocalStorage(WYNOS_TABLES_STORAGE_KEY, updatedTables);\n    } else {\n      setTables(updatedTables);\n      saveDataToLocalStorage(TABLES_STORAGE_KEY, updatedTables);\n    }\n  };\n  const toggleManagerPanel = () => {\n    const newState = !managerPanelOpen;\n    setManagerPanelOpen(newState);\n    saveDataToLocalStorage(MANAGER_PANEL_STATE_KEY, newState.toString());\n  };\n  const resetTable = tableId => {\n    const updatedTables = isWynos ? wynosTables.map(table => table.id === tableId ? {\n      ...table,\n      status: \"free\",\n      products: []\n    } : table) : tables.map(table => table.id === tableId ? {\n      ...table,\n      status: \"free\",\n      products: []\n    } : table);\n    if (isWynos) {\n      setWynosTables(updatedTables);\n      saveDataToLocalStorage(WYNOS_TABLES_STORAGE_KEY, updatedTables);\n    } else {\n      setTables(updatedTables);\n      saveDataToLocalStorage(TABLES_STORAGE_KEY, updatedTables);\n    }\n  };\n  const selectedTable = isWynos ? wynosTables.find(table => table.id === selectedTableId) : tables.find(table => table.id === selectedTableId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-manager\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-grid\",\n      children: tables.map(table => /*#__PURE__*/_jsxDEV(Table, {\n        id: table.id,\n        name: table.name,\n        status: table.status,\n        products: table.products,\n        onTableClick: handleTableClick\n      }, table.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"manager-panel-button\",\n      onClick: toggleManagerPanel,\n      children: \"Manager Panel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 4\n    }, this), managerPanelOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      onClick: toggleManagerPanel,\n      children: /*#__PURE__*/_jsxDEV(ManagerPanel, {\n        tables: tables,\n        wynosTables: wynosTables\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 5\n    }, this), wynosModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      onClick: handleWynosModalClose,\n      children: /*#__PURE__*/_jsxDEV(WynosListModal, {\n        tables: wynosTables,\n        onTableClick: handleWynosTableClick,\n        onClose: handleWynosModalClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 5\n    }, this), modalOpen && /*#__PURE__*/_jsxDEV(Modal, {\n      open: modalOpen,\n      onClose: handleModalClose,\n      onConfirm: handleModalConfirm,\n      onAddProduct: handleAddProduct\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 5\n    }, this), menuManagerOpen && selectedTable && /*#__PURE__*/_jsxDEV(MenuManager, {\n      tableName: selectedTable.name,\n      onClose: handleMenuManagerClose,\n      onAddProduct: handleAddProduct,\n      resetTable: () => resetTable(selectedTable.id),\n      products: selectedTable.products\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 3\n  }, this);\n};\n_s(TableManager, \"mi0TFocUypcWzZpwGYolRvU3UnA=\");\n_c = TableManager;\nexport default TableManager;\nvar _c;\n$RefreshReg$(_c, \"TableManager\");","map":{"version":3,"names":["React","useState","useEffect","Table","Modal","MenuManager","WynosListModal","ManagerPanel","jsxDEV","_jsxDEV","TABLES_STORAGE_KEY","WYNOS_TABLES_STORAGE_KEY","MANAGER_PANEL_STATE_KEY","initializeTables","initialTables","id","name","status","products","Array","from","length","_","index","saveDataToLocalStorage","initializeWynosTables","initialWynosTables","key","data","localStorage","setItem","JSON","stringify","loadDataFromLocalStorage","getItem","parse","TableManager","_s","tables","setTables","wynosTables","setWynosTables","modalOpen","setModalOpen","menuManagerOpen","setMenuManagerOpen","wynosModalOpen","setWynosModalOpen","selectedTableId","setSelectedTableId","isWynos","setIsWynos","managerPanelOpen","setManagerPanelOpen","storedTables","storedWynosTables","storedManagerPanelState","handleTableClick","tableId","clickedTable","find","table","handleModalClose","handleModalConfirm","tableName","updatedTables","map","handleMenuManagerClose","handleWynosModalClose","handleWynosTableClick","handleAddProduct","productId","productName","toggleManagerPanel","newState","toString","resetTable","selectedTable","className","children","onTableClick","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onClose","open","onConfirm","onAddProduct","_c","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Desktop/possg4/src/components/TableManager.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./TableManager.css\";\r\nimport Table from \"./Table\";\r\nimport Modal from \"./Modal\";\r\nimport MenuManager from \"./MenuManager\";\r\nimport WynosListModal from \"./WynosListModal\";\r\nimport ManagerPanel from \"./ManagerPanel\";\r\nimport \"./TableManager.css\";\r\n\r\nconst TABLES_STORAGE_KEY = \"tables\";\r\nconst WYNOS_TABLES_STORAGE_KEY = \"wynosTables\";\r\nconst MANAGER_PANEL_STATE_KEY = \"managerPanelOpen\";\r\n\r\nconst initializeTables = () => {\r\n\tconst initialTables = [\r\n\t\t{ id: 0, name: \"Wynos\", status: \"special\", products: [] },\r\n\t\t...Array.from({ length: 45 }, (_, index) => ({\r\n\t\t\tid: index + 1,\r\n\t\t\tname: `Table ${index + 1}`,\r\n\t\t\tstatus: \"free\",\r\n\t\t\tproducts: [],\r\n\t\t})),\r\n\t];\r\n\tsaveDataToLocalStorage(TABLES_STORAGE_KEY, initialTables);\r\n\treturn initialTables;\r\n};\r\n\r\nconst initializeWynosTables = () => {\r\n\tconst initialWynosTables = Array.from({ length: 20 }, (_, index) => ({\r\n\t\tid: index + 40,\r\n\t\tname: `Wynos ${index + 1}`,\r\n\t\tstatus: \"free\",\r\n\t\tproducts: [],\r\n\t}));\r\n\tsaveDataToLocalStorage(WYNOS_TABLES_STORAGE_KEY, initialWynosTables);\r\n\treturn initialWynosTables;\r\n};\r\n\r\nconst saveDataToLocalStorage = (key, data) => {\r\n\tlocalStorage.setItem(key, JSON.stringify(data));\r\n};\r\n\r\nconst loadDataFromLocalStorage = (key) => {\r\n\tconst data = localStorage.getItem(key);\r\n\treturn data ? JSON.parse(data) : null;\r\n};\r\n\r\nconst TableManager = () => {\r\n\tconst [tables, setTables] = useState([]);\r\n\tconst [wynosTables, setWynosTables] = useState([]);\r\n\tconst [modalOpen, setModalOpen] = useState(false);\r\n\tconst [menuManagerOpen, setMenuManagerOpen] = useState(false);\r\n\tconst [wynosModalOpen, setWynosModalOpen] = useState(false);\r\n\tconst [selectedTableId, setSelectedTableId] = useState(null);\r\n\tconst [isWynos, setIsWynos] = useState(false);\r\n\tconst [managerPanelOpen, setManagerPanelOpen] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst storedTables = loadDataFromLocalStorage(TABLES_STORAGE_KEY);\r\n\t\tif (storedTables) {\r\n\t\t\tsetTables(storedTables);\r\n\t\t} else {\r\n\t\t\tsetTables(initializeTables());\r\n\t\t}\r\n\r\n\t\tconst storedWynosTables = loadDataFromLocalStorage(\r\n\t\t\tWYNOS_TABLES_STORAGE_KEY\r\n\t\t);\r\n\t\tif (storedWynosTables) {\r\n\t\t\tsetWynosTables(storedWynosTables);\r\n\t\t} else {\r\n\t\t\tsetWynosTables(initializeWynosTables());\r\n\t\t}\r\n\r\n\t\tconst storedManagerPanelState = loadDataFromLocalStorage(\r\n\t\t\tMANAGER_PANEL_STATE_KEY\r\n\t\t);\r\n\t\tif (storedManagerPanelState !== null) {\r\n\t\t\tsetManagerPanelOpen(storedManagerPanelState === \"true\");\r\n\t\t}\r\n\t}, []);\r\n\r\n\tconst handleTableClick = (tableId) => {\r\n\t\tif (tableId === 0) {\r\n\t\t\tsetWynosModalOpen(true);\r\n\t\t} else {\r\n\t\t\tconst clickedTable = tables.find((table) => table.id === tableId);\r\n\t\t\tsetSelectedTableId(tableId);\r\n\t\t\tsetIsWynos(false);\r\n\r\n\t\t\tif (clickedTable.status === \"free\") {\r\n\t\t\t\tsetModalOpen(true);\r\n\t\t\t} else if (clickedTable.status === \"occupied\") {\r\n\t\t\t\tsetMenuManagerOpen(true);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleModalClose = () => {\r\n\t\tsetModalOpen(false);\r\n\t};\r\n\r\n\tconst handleModalConfirm = (tableName) => {\r\n\t\tconst updatedTables = isWynos\r\n\t\t\t? wynosTables.map((table) =>\r\n\t\t\t\t\ttable.id === selectedTableId\r\n\t\t\t\t\t\t? { ...table, name: tableName, status: \"occupied\" }\r\n\t\t\t\t\t\t: table\r\n\t\t\t  )\r\n\t\t\t: tables.map((table) =>\r\n\t\t\t\t\ttable.id === selectedTableId\r\n\t\t\t\t\t\t? { ...table, name: tableName, status: \"occupied\" }\r\n\t\t\t\t\t\t: table\r\n\t\t\t  );\r\n\r\n\t\tif (isWynos) {\r\n\t\t\tsetWynosTables(updatedTables);\r\n\t\t\tsaveDataToLocalStorage(WYNOS_TABLES_STORAGE_KEY, updatedTables);\r\n\t\t} else {\r\n\t\t\tsetTables(updatedTables);\r\n\t\t\tsaveDataToLocalStorage(TABLES_STORAGE_KEY, updatedTables);\r\n\t\t}\r\n\r\n\t\tsetModalOpen(false);\r\n\t\tsetMenuManagerOpen(true);\r\n\t};\r\n\r\n\tconst handleMenuManagerClose = () => {\r\n\t\tsetMenuManagerOpen(false);\r\n\t\tsetSelectedTableId(null);\r\n\t};\r\n\r\n\tconst handleWynosModalClose = () => {\r\n\t\tsetWynosModalOpen(false);\r\n\t};\r\n\r\n\tconst handleWynosTableClick = (tableId) => {\r\n\t\tconst clickedTable = wynosTables.find((table) => table.id === tableId);\r\n\t\tif (clickedTable) {\r\n\t\t\tsetSelectedTableId(tableId);\r\n\t\t\tsetIsWynos(true);\r\n\r\n\t\t\tif (clickedTable.status === \"free\") {\r\n\t\t\t\tsetModalOpen(true);\r\n\t\t\t} else if (clickedTable.status === \"occupied\") {\r\n\t\t\t\tsetMenuManagerOpen(true);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleAddProduct = (productId, productName) => {\r\n\t\tconst updatedTables = isWynos\r\n\t\t\t? wynosTables.map((table) =>\r\n\t\t\t\t\ttable.id === selectedTableId\r\n\t\t\t\t\t\t? {\r\n\t\t\t\t\t\t\t\t...table,\r\n\t\t\t\t\t\t\t\tproducts: [\r\n\t\t\t\t\t\t\t\t\t...table.products,\r\n\t\t\t\t\t\t\t\t\t{ id: productId, name: productName },\r\n\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t: table\r\n\t\t\t  )\r\n\t\t\t: tables.map((table) =>\r\n\t\t\t\t\ttable.id === selectedTableId\r\n\t\t\t\t\t\t? {\r\n\t\t\t\t\t\t\t\t...table,\r\n\t\t\t\t\t\t\t\tproducts: [\r\n\t\t\t\t\t\t\t\t\t...table.products,\r\n\t\t\t\t\t\t\t\t\t{ id: productId, name: productName },\r\n\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t: table\r\n\t\t\t  );\r\n\r\n\t\tif (isWynos) {\r\n\t\t\tsetWynosTables(updatedTables);\r\n\t\t\tsaveDataToLocalStorage(WYNOS_TABLES_STORAGE_KEY, updatedTables);\r\n\t\t} else {\r\n\t\t\tsetTables(updatedTables);\r\n\t\t\tsaveDataToLocalStorage(TABLES_STORAGE_KEY, updatedTables);\r\n\t\t}\r\n\t};\r\n\r\n\tconst toggleManagerPanel = () => {\r\n\t\tconst newState = !managerPanelOpen;\r\n\t\tsetManagerPanelOpen(newState);\r\n\t\tsaveDataToLocalStorage(MANAGER_PANEL_STATE_KEY, newState.toString());\r\n\t};\r\n\r\n\tconst resetTable = (tableId) => {\r\n\t\tconst updatedTables = isWynos\r\n\t\t\t? wynosTables.map((table) =>\r\n\t\t\t\t\ttable.id === tableId\r\n\t\t\t\t\t\t? {\r\n\t\t\t\t\t\t\t\t...table,\r\n\t\t\t\t\t\t\t\tstatus: \"free\",\r\n\t\t\t\t\t\t\t\tproducts: [],\r\n\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t: table\r\n\t\t\t  )\r\n\t\t\t: tables.map((table) =>\r\n\t\t\t\t\ttable.id === tableId\r\n\t\t\t\t\t\t? {\r\n\t\t\t\t\t\t\t\t...table,\r\n\t\t\t\t\t\t\t\tstatus: \"free\",\r\n\t\t\t\t\t\t\t\tproducts: [],\r\n\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t: table\r\n\t\t\t  );\r\n\r\n\t\tif (isWynos) {\r\n\t\t\tsetWynosTables(updatedTables);\r\n\t\t\tsaveDataToLocalStorage(WYNOS_TABLES_STORAGE_KEY, updatedTables);\r\n\t\t} else {\r\n\t\t\tsetTables(updatedTables);\r\n\t\t\tsaveDataToLocalStorage(TABLES_STORAGE_KEY, updatedTables);\r\n\t\t}\r\n\t};\r\n\r\n\tconst selectedTable = isWynos\r\n\t\t? wynosTables.find((table) => table.id === selectedTableId)\r\n\t\t: tables.find((table) => table.id === selectedTableId);\r\n\r\n\treturn (\r\n\t\t<div className=\"table-manager\">\r\n\t\t\t<div className=\"table-grid\">\r\n\t\t\t\t{tables.map((table) => (\r\n\t\t\t\t\t<Table\r\n\t\t\t\t\t\tkey={table.id}\r\n\t\t\t\t\t\tid={table.id}\r\n\t\t\t\t\t\tname={table.name}\r\n\t\t\t\t\t\tstatus={table.status}\r\n\t\t\t\t\t\tproducts={table.products}\r\n\t\t\t\t\t\tonTableClick={handleTableClick}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t\t<button className=\"manager-panel-button\" onClick={toggleManagerPanel}>\r\n\t\t\t\tManager Panel\r\n\t\t\t</button>\r\n\t\t\t{managerPanelOpen && (\r\n\t\t\t\t<div className=\"modal-overlay\" onClick={toggleManagerPanel}>\r\n\t\t\t\t\t<ManagerPanel tables={tables} wynosTables={wynosTables} />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t{wynosModalOpen && (\r\n\t\t\t\t<div className=\"modal-overlay\" onClick={handleWynosModalClose}>\r\n\t\t\t\t\t<WynosListModal\r\n\t\t\t\t\t\ttables={wynosTables}\r\n\t\t\t\t\t\tonTableClick={handleWynosTableClick}\r\n\t\t\t\t\t\tonClose={handleWynosModalClose}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t{modalOpen && (\r\n\t\t\t\t<Modal\r\n\t\t\t\t\topen={modalOpen}\r\n\t\t\t\t\tonClose={handleModalClose}\r\n\t\t\t\t\tonConfirm={handleModalConfirm}\r\n\t\t\t\t\tonAddProduct={handleAddProduct}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t\t{menuManagerOpen && selectedTable && (\r\n\t\t\t\t<MenuManager\r\n\t\t\t\t\ttableName={selectedTable.name}\r\n\t\t\t\t\tonClose={handleMenuManagerClose}\r\n\t\t\t\t\tonAddProduct={handleAddProduct}\r\n\t\t\t\t\tresetTable={() => resetTable(selectedTable.id)}\r\n\t\t\t\t\tproducts={selectedTable.products}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TableManager;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,oBAAoB;AAC3B,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,kBAAkB,GAAG,QAAQ;AACnC,MAAMC,wBAAwB,GAAG,aAAa;AAC9C,MAAMC,uBAAuB,GAAG,kBAAkB;AAElD,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAC9B,MAAMC,aAAa,GAAG,CACrB;IAAEC,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,OAAO;IAAEC,MAAM,EAAE,SAAS;IAAEC,QAAQ,EAAE;EAAG,CAAC,EACzD,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAE;EAAG,CAAC,EAAE,CAACC,CAAC,EAAEC,KAAK,MAAM;IAC5CR,EAAE,EAAEQ,KAAK,GAAG,CAAC;IACbP,IAAI,EAAE,SAASO,KAAK,GAAG,CAAC,EAAE;IAC1BN,MAAM,EAAE,MAAM;IACdC,QAAQ,EAAE;EACX,CAAC,CAAC,CAAC,CACH;EACDM,sBAAsB,CAACd,kBAAkB,EAAEI,aAAa,CAAC;EACzD,OAAOA,aAAa;AACrB,CAAC;AAED,MAAMW,qBAAqB,GAAGA,CAAA,KAAM;EACnC,MAAMC,kBAAkB,GAAGP,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAE;EAAG,CAAC,EAAE,CAACC,CAAC,EAAEC,KAAK,MAAM;IACpER,EAAE,EAAEQ,KAAK,GAAG,EAAE;IACdP,IAAI,EAAE,SAASO,KAAK,GAAG,CAAC,EAAE;IAC1BN,MAAM,EAAE,MAAM;IACdC,QAAQ,EAAE;EACX,CAAC,CAAC,CAAC;EACHM,sBAAsB,CAACb,wBAAwB,EAAEe,kBAAkB,CAAC;EACpE,OAAOA,kBAAkB;AAC1B,CAAC;AAED,MAAMF,sBAAsB,GAAGA,CAACG,GAAG,EAAEC,IAAI,KAAK;EAC7CC,YAAY,CAACC,OAAO,CAACH,GAAG,EAAEI,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC;AAChD,CAAC;AAED,MAAMK,wBAAwB,GAAIN,GAAG,IAAK;EACzC,MAAMC,IAAI,GAAGC,YAAY,CAACK,OAAO,CAACP,GAAG,CAAC;EACtC,OAAOC,IAAI,GAAGG,IAAI,CAACI,KAAK,CAACP,IAAI,CAAC,GAAG,IAAI;AACtC,CAAC;AAED,MAAMQ,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGtC,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACuC,WAAW,EAAEC,cAAc,CAAC,GAAGxC,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACyC,SAAS,EAAEC,YAAY,CAAC,GAAG1C,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC2C,eAAe,EAAEC,kBAAkB,CAAC,GAAG5C,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAAC6C,cAAc,EAAEC,iBAAiB,CAAC,GAAG9C,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAAC+C,eAAe,EAAEC,kBAAkB,CAAC,GAAGhD,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACiD,OAAO,EAAEC,UAAU,CAAC,GAAGlD,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACmD,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGpD,QAAQ,CAAC,KAAK,CAAC;EAE/DC,SAAS,CAAC,MAAM;IACf,MAAMoD,YAAY,GAAGrB,wBAAwB,CAACvB,kBAAkB,CAAC;IACjE,IAAI4C,YAAY,EAAE;MACjBf,SAAS,CAACe,YAAY,CAAC;IACxB,CAAC,MAAM;MACNf,SAAS,CAAC1B,gBAAgB,CAAC,CAAC,CAAC;IAC9B;IAEA,MAAM0C,iBAAiB,GAAGtB,wBAAwB,CACjDtB,wBACD,CAAC;IACD,IAAI4C,iBAAiB,EAAE;MACtBd,cAAc,CAACc,iBAAiB,CAAC;IAClC,CAAC,MAAM;MACNd,cAAc,CAAChB,qBAAqB,CAAC,CAAC,CAAC;IACxC;IAEA,MAAM+B,uBAAuB,GAAGvB,wBAAwB,CACvDrB,uBACD,CAAC;IACD,IAAI4C,uBAAuB,KAAK,IAAI,EAAE;MACrCH,mBAAmB,CAACG,uBAAuB,KAAK,MAAM,CAAC;IACxD;EACD,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,gBAAgB,GAAIC,OAAO,IAAK;IACrC,IAAIA,OAAO,KAAK,CAAC,EAAE;MAClBX,iBAAiB,CAAC,IAAI,CAAC;IACxB,CAAC,MAAM;MACN,MAAMY,YAAY,GAAGrB,MAAM,CAACsB,IAAI,CAAEC,KAAK,IAAKA,KAAK,CAAC9C,EAAE,KAAK2C,OAAO,CAAC;MACjET,kBAAkB,CAACS,OAAO,CAAC;MAC3BP,UAAU,CAAC,KAAK,CAAC;MAEjB,IAAIQ,YAAY,CAAC1C,MAAM,KAAK,MAAM,EAAE;QACnC0B,YAAY,CAAC,IAAI,CAAC;MACnB,CAAC,MAAM,IAAIgB,YAAY,CAAC1C,MAAM,KAAK,UAAU,EAAE;QAC9C4B,kBAAkB,CAAC,IAAI,CAAC;MACzB;IACD;EACD,CAAC;EAED,MAAMiB,gBAAgB,GAAGA,CAAA,KAAM;IAC9BnB,YAAY,CAAC,KAAK,CAAC;EACpB,CAAC;EAED,MAAMoB,kBAAkB,GAAIC,SAAS,IAAK;IACzC,MAAMC,aAAa,GAAGf,OAAO,GAC1BV,WAAW,CAAC0B,GAAG,CAAEL,KAAK,IACtBA,KAAK,CAAC9C,EAAE,KAAKiC,eAAe,GACzB;MAAE,GAAGa,KAAK;MAAE7C,IAAI,EAAEgD,SAAS;MAAE/C,MAAM,EAAE;IAAW,CAAC,GACjD4C,KACH,CAAC,GACDvB,MAAM,CAAC4B,GAAG,CAAEL,KAAK,IACjBA,KAAK,CAAC9C,EAAE,KAAKiC,eAAe,GACzB;MAAE,GAAGa,KAAK;MAAE7C,IAAI,EAAEgD,SAAS;MAAE/C,MAAM,EAAE;IAAW,CAAC,GACjD4C,KACH,CAAC;IAEJ,IAAIX,OAAO,EAAE;MACZT,cAAc,CAACwB,aAAa,CAAC;MAC7BzC,sBAAsB,CAACb,wBAAwB,EAAEsD,aAAa,CAAC;IAChE,CAAC,MAAM;MACN1B,SAAS,CAAC0B,aAAa,CAAC;MACxBzC,sBAAsB,CAACd,kBAAkB,EAAEuD,aAAa,CAAC;IAC1D;IAEAtB,YAAY,CAAC,KAAK,CAAC;IACnBE,kBAAkB,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,MAAMsB,sBAAsB,GAAGA,CAAA,KAAM;IACpCtB,kBAAkB,CAAC,KAAK,CAAC;IACzBI,kBAAkB,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,MAAMmB,qBAAqB,GAAGA,CAAA,KAAM;IACnCrB,iBAAiB,CAAC,KAAK,CAAC;EACzB,CAAC;EAED,MAAMsB,qBAAqB,GAAIX,OAAO,IAAK;IAC1C,MAAMC,YAAY,GAAGnB,WAAW,CAACoB,IAAI,CAAEC,KAAK,IAAKA,KAAK,CAAC9C,EAAE,KAAK2C,OAAO,CAAC;IACtE,IAAIC,YAAY,EAAE;MACjBV,kBAAkB,CAACS,OAAO,CAAC;MAC3BP,UAAU,CAAC,IAAI,CAAC;MAEhB,IAAIQ,YAAY,CAAC1C,MAAM,KAAK,MAAM,EAAE;QACnC0B,YAAY,CAAC,IAAI,CAAC;MACnB,CAAC,MAAM,IAAIgB,YAAY,CAAC1C,MAAM,KAAK,UAAU,EAAE;QAC9C4B,kBAAkB,CAAC,IAAI,CAAC;MACzB;IACD;EACD,CAAC;EAED,MAAMyB,gBAAgB,GAAGA,CAACC,SAAS,EAAEC,WAAW,KAAK;IACpD,MAAMP,aAAa,GAAGf,OAAO,GAC1BV,WAAW,CAAC0B,GAAG,CAAEL,KAAK,IACtBA,KAAK,CAAC9C,EAAE,KAAKiC,eAAe,GACzB;MACA,GAAGa,KAAK;MACR3C,QAAQ,EAAE,CACT,GAAG2C,KAAK,CAAC3C,QAAQ,EACjB;QAAEH,EAAE,EAAEwD,SAAS;QAAEvD,IAAI,EAAEwD;MAAY,CAAC;IAErC,CAAC,GACDX,KACH,CAAC,GACDvB,MAAM,CAAC4B,GAAG,CAAEL,KAAK,IACjBA,KAAK,CAAC9C,EAAE,KAAKiC,eAAe,GACzB;MACA,GAAGa,KAAK;MACR3C,QAAQ,EAAE,CACT,GAAG2C,KAAK,CAAC3C,QAAQ,EACjB;QAAEH,EAAE,EAAEwD,SAAS;QAAEvD,IAAI,EAAEwD;MAAY,CAAC;IAErC,CAAC,GACDX,KACH,CAAC;IAEJ,IAAIX,OAAO,EAAE;MACZT,cAAc,CAACwB,aAAa,CAAC;MAC7BzC,sBAAsB,CAACb,wBAAwB,EAAEsD,aAAa,CAAC;IAChE,CAAC,MAAM;MACN1B,SAAS,CAAC0B,aAAa,CAAC;MACxBzC,sBAAsB,CAACd,kBAAkB,EAAEuD,aAAa,CAAC;IAC1D;EACD,CAAC;EAED,MAAMQ,kBAAkB,GAAGA,CAAA,KAAM;IAChC,MAAMC,QAAQ,GAAG,CAACtB,gBAAgB;IAClCC,mBAAmB,CAACqB,QAAQ,CAAC;IAC7BlD,sBAAsB,CAACZ,uBAAuB,EAAE8D,QAAQ,CAACC,QAAQ,CAAC,CAAC,CAAC;EACrE,CAAC;EAED,MAAMC,UAAU,GAAIlB,OAAO,IAAK;IAC/B,MAAMO,aAAa,GAAGf,OAAO,GAC1BV,WAAW,CAAC0B,GAAG,CAAEL,KAAK,IACtBA,KAAK,CAAC9C,EAAE,KAAK2C,OAAO,GACjB;MACA,GAAGG,KAAK;MACR5C,MAAM,EAAE,MAAM;MACdC,QAAQ,EAAE;IACV,CAAC,GACD2C,KACH,CAAC,GACDvB,MAAM,CAAC4B,GAAG,CAAEL,KAAK,IACjBA,KAAK,CAAC9C,EAAE,KAAK2C,OAAO,GACjB;MACA,GAAGG,KAAK;MACR5C,MAAM,EAAE,MAAM;MACdC,QAAQ,EAAE;IACV,CAAC,GACD2C,KACH,CAAC;IAEJ,IAAIX,OAAO,EAAE;MACZT,cAAc,CAACwB,aAAa,CAAC;MAC7BzC,sBAAsB,CAACb,wBAAwB,EAAEsD,aAAa,CAAC;IAChE,CAAC,MAAM;MACN1B,SAAS,CAAC0B,aAAa,CAAC;MACxBzC,sBAAsB,CAACd,kBAAkB,EAAEuD,aAAa,CAAC;IAC1D;EACD,CAAC;EAED,MAAMY,aAAa,GAAG3B,OAAO,GAC1BV,WAAW,CAACoB,IAAI,CAAEC,KAAK,IAAKA,KAAK,CAAC9C,EAAE,KAAKiC,eAAe,CAAC,GACzDV,MAAM,CAACsB,IAAI,CAAEC,KAAK,IAAKA,KAAK,CAAC9C,EAAE,KAAKiC,eAAe,CAAC;EAEvD,oBACCvC,OAAA;IAAKqE,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC7BtE,OAAA;MAAKqE,SAAS,EAAC,YAAY;MAAAC,QAAA,EACzBzC,MAAM,CAAC4B,GAAG,CAAEL,KAAK,iBACjBpD,OAAA,CAACN,KAAK;QAELY,EAAE,EAAE8C,KAAK,CAAC9C,EAAG;QACbC,IAAI,EAAE6C,KAAK,CAAC7C,IAAK;QACjBC,MAAM,EAAE4C,KAAK,CAAC5C,MAAO;QACrBC,QAAQ,EAAE2C,KAAK,CAAC3C,QAAS;QACzB8D,YAAY,EAAEvB;MAAiB,GAL1BI,KAAK,CAAC9C,EAAE;QAAAkE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMb,CACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACN3E,OAAA;MAAQqE,SAAS,EAAC,sBAAsB;MAACO,OAAO,EAAEZ,kBAAmB;MAAAM,QAAA,EAAC;IAEtE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACRhC,gBAAgB,iBAChB3C,OAAA;MAAKqE,SAAS,EAAC,eAAe;MAACO,OAAO,EAAEZ,kBAAmB;MAAAM,QAAA,eAC1DtE,OAAA,CAACF,YAAY;QAAC+B,MAAM,EAAEA,MAAO;QAACE,WAAW,EAAEA;MAAY;QAAAyC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CACL,EACAtC,cAAc,iBACdrC,OAAA;MAAKqE,SAAS,EAAC,eAAe;MAACO,OAAO,EAAEjB,qBAAsB;MAAAW,QAAA,eAC7DtE,OAAA,CAACH,cAAc;QACdgC,MAAM,EAAEE,WAAY;QACpBwC,YAAY,EAAEX,qBAAsB;QACpCiB,OAAO,EAAElB;MAAsB;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACL,EACA1C,SAAS,iBACTjC,OAAA,CAACL,KAAK;MACLmF,IAAI,EAAE7C,SAAU;MAChB4C,OAAO,EAAExB,gBAAiB;MAC1B0B,SAAS,EAAEzB,kBAAmB;MAC9B0B,YAAY,EAAEnB;IAAiB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CACD,EACAxC,eAAe,IAAIiC,aAAa,iBAChCpE,OAAA,CAACJ,WAAW;MACX2D,SAAS,EAAEa,aAAa,CAAC7D,IAAK;MAC9BsE,OAAO,EAAEnB,sBAAuB;MAChCsB,YAAY,EAAEnB,gBAAiB;MAC/BM,UAAU,EAAEA,CAAA,KAAMA,UAAU,CAACC,aAAa,CAAC9D,EAAE,CAAE;MAC/CG,QAAQ,EAAE2D,aAAa,CAAC3D;IAAS;MAAA+D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CACD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAER,CAAC;AAAC/C,EAAA,CAnOID,YAAY;AAAAsD,EAAA,GAAZtD,YAAY;AAqOlB,eAAeA,YAAY;AAAC,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}